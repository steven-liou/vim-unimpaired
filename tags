!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Volumes/D/Coding/Vim/modes.nvim/lua/vim-unimpaired/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
<Plug>(unimpaired-blank-down)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-blank-down) :<C-U>exe <SID>BlankDown()<CR>$/;"	m
<Plug>(unimpaired-blank-up)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-blank-up)   :<C-U>exe <SID>BlankUp()<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>call <SID>Context(0)<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugin/unimpaired.vim	/^onoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>(unimpaired-context-next)	plugin/unimpaired.vim	/^vnoremap <silent> <Plug>(unimpaired-context-next)     :<C-U>exe 'normal! gv'<Bar>call <SID>Conte/;"	m
<Plug>(unimpaired-context-previous)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>call <SID>Context(1)<CR>$/;"	m
<Plug>(unimpaired-context-previous)	plugin/unimpaired.vim	/^onoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>(unimpaired-context-previous)	plugin/unimpaired.vim	/^vnoremap <silent> <Plug>(unimpaired-context-previous) :<C-U>exe 'normal! gv'<Bar>call <SID>Conte/;"	m
<Plug>(unimpaired-directory-next)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-directory-next)     :<C-U>execute <SID>NextFileEntry(v:count/;"	m
<Plug>(unimpaired-directory-previous)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-directory-previous) :<C-U>execute <SID>PreviousFileEntry(v:c/;"	m
<Plug>(unimpaired-disable)+	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)+ :<C-U>set nocursorline nocursorcolumn<CR>$/;"	m
<Plug>(unimpaired-disable)b	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)b :<C-U>set background=dark<CR>$/;"	m
<Plug>(unimpaired-disable)d	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)d :<C-U>diffoff<CR>$/;"	m
<Plug>(unimpaired-disable)p	plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-disable)p :<C-U>call <SID>SetupPaste()<CR>o$/;"	m
<Plug>(unimpaired-disable)v	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)v :<C-U>set virtualedit-=all<CR>$/;"	m
<Plug>(unimpaired-disable)x	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-disable)x :<C-U>set nocursorline nocursorcolumn<CR>$/;"	m
<Plug>(unimpaired-enable)+	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)+  :<C-U>set cursorline cursorcolumn<CR>$/;"	m
<Plug>(unimpaired-enable)b	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)b  :<C-U>set background=light<CR>$/;"	m
<Plug>(unimpaired-enable)d	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)d  :<C-U>diffthis<CR>$/;"	m
<Plug>(unimpaired-enable)p	plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-enable)p  :<C-U>call <SID>SetupPaste()<CR>O$/;"	m
<Plug>(unimpaired-enable)v	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)v  :<C-U>set virtualedit+=all<CR>$/;"	m
<Plug>(unimpaired-enable)x	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-enable)x  :<C-U>set cursorline cursorcolumn<CR>$/;"	m
<Plug>(unimpaired-move-down)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-move-down)          :<C-U>call <SID>Move('+',v:count1,'down'/;"	m
<Plug>(unimpaired-move-selection-down)	plugin/unimpaired.vim	/^noremap  <silent> <Plug>(unimpaired-move-selection-down) :<C-U>call <SID>MoveSelectionDown(v:cou/;"	m
<Plug>(unimpaired-move-selection-up)	plugin/unimpaired.vim	/^noremap  <silent> <Plug>(unimpaired-move-selection-up)   :<C-U>call <SID>MoveSelectionUp(v:count/;"	m
<Plug>(unimpaired-move-up)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-move-up)            :<C-U>call <SID>Move('--',v:count1,'up')/;"	m
<Plug>(unimpaired-paste)	plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-paste) :<C-U>call <SID>SetupPaste()<CR>$/;"	m
<Plug>(unimpaired-ptnext)	plugin/unimpaired.vim	/^    nnoremap <silent> <Plug>(unimpaired-ptnext) :<C-U>exe v:count1 . "ptnext"<CR>$/;"	m
<Plug>(unimpaired-ptprevious)	plugin/unimpaired.vim	/^    nnoremap <silent> <Plug>(unimpaired-ptprevious) :<C-U>exe v:count1 . "ptprevious"<CR>$/;"	m
<Plug>(unimpaired-put-above)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above) :call <SID>putline('[p', 'above')<CR>$/;"	m
<Plug>(unimpaired-put-above-leftward)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-leftward)  :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-above-reformat)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-reformat)  :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-above-rightward)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-above-rightward) :<C-U>call <SID>putline(v:count1 . '[p'/;"	m
<Plug>(unimpaired-put-below)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below) :call <SID>putline(']p', 'below')<CR>$/;"	m
<Plug>(unimpaired-put-below-leftward)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-leftward)  :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-put-below-reformat)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-reformat)  :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-put-below-rightward)	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>(unimpaired-put-below-rightward) :<C-U>call <SID>putline(v:count1 . ']p'/;"	m
<Plug>(unimpaired-toggle)+	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)+  :<C-U>set <C-R>=<SID>CursorOptions()<CR><CR>$/;"	m
<Plug>(unimpaired-toggle)b	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)b  :<C-U>set background=<C-R>=&background == "dark" ? "li/;"	m
<Plug>(unimpaired-toggle)d	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)d  :<C-U><C-R>=&diff ? "diffoff" : "diffthis"<CR><CR>$/;"	m
<Plug>(unimpaired-toggle)p	plugin/unimpaired.vim	/^nmap <script><silent> <Plug>(unimpaired-toggle)p  :<C-U>call <SID>SetupPaste()<CR>0C$/;"	m
<Plug>(unimpaired-toggle)v	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)v  :<C-U>set <C-R>=(&virtualedit =~# "all") ? "virtualedi/;"	m
<Plug>(unimpaired-toggle)x	plugin/unimpaired.vim	/^nmap <script> <Plug>(unimpaired-toggle)x  :<C-U>set <C-R>=<SID>CursorOptions()<CR><CR>$/;"	m
<Plug>unimpairedBlankDown	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankDown :<C-U>exe <SID>BlankDown()<CR>$/;"	m
<Plug>unimpairedBlankUp	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedBlankUp   :<C-U>exe <SID>BlankUp()<CR>$/;"	m
<Plug>unimpairedContextNext	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextNext     :<C-U>call <SID>Context(0)<CR>$/;"	m
<Plug>unimpairedContextNext	plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextNext     :<C-U>call <SID>ContextMotion(0)<CR>$/;"	m
<Plug>unimpairedContextNext	plugin/unimpaired.vim	/^xnoremap <silent> <Plug>unimpairedContextNext     :<C-U>exe 'normal! gv'<Bar>call <SID>Context(0/;"	m
<Plug>unimpairedContextPrevious	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedContextPrevious :<C-U>call <SID>Context(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	plugin/unimpaired.vim	/^onoremap <silent> <Plug>unimpairedContextPrevious :<C-U>call <SID>ContextMotion(1)<CR>$/;"	m
<Plug>unimpairedContextPrevious	plugin/unimpaired.vim	/^xnoremap <silent> <Plug>unimpairedContextPrevious :<C-U>exe 'normal! gv'<Bar>call <SID>Context(1/;"	m
<Plug>unimpairedDirectoryNext	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryNext     :<C-U>execute <SID>NextFileEntry(v:count1)<C/;"	m
<Plug>unimpairedDirectoryPrevious	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedDirectoryPrevious :<C-U>execute <SID>PreviousFileEntry(v:count/;"	m
<Plug>unimpairedMoveDown	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveDown          :<C-U>call <SID>Move('+',v:count1,'down')<CR/;"	m
<Plug>unimpairedMoveSelectionDown	plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionDown :<C-U>call <SID>MoveSelectionDown(v:count1)</;"	m
<Plug>unimpairedMoveSelectionUp	plugin/unimpaired.vim	/^noremap  <silent> <Plug>unimpairedMoveSelectionUp   :<C-U>call <SID>MoveSelectionUp(v:count1)<CR/;"	m
<Plug>unimpairedMoveUp	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedMoveUp            :<C-U>call <SID>Move('--',v:count1,'up')<CR>$/;"	m
<Plug>unimpairedPaste	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPaste :call <SID>SetupPaste()<CR>$/;"	m
<Plug>unimpairedPutAbove	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutAbove :call <SID>putline('[p', 'above')<CR>$/;"	m
<Plug>unimpairedPutBelow	plugin/unimpaired.vim	/^nnoremap <silent> <Plug>unimpairedPutBelow :call <SID>putline(']p', 'below')<CR>$/;"	m
Contributing	README.markdown	/^## Contributing$/;"	s	chapter:unimpaired.vim
FAQ	README.markdown	/^## FAQ$/;"	s	chapter:unimpaired.vim
Installation	README.markdown	/^## Installation$/;"	s	chapter:unimpaired.vim
License	README.markdown	/^## License$/;"	s	chapter:unimpaired.vim
Self-Promotion	README.markdown	/^## Self-Promotion$/;"	s	chapter:unimpaired.vim
UnimpairedMapTransform	plugin/unimpaired.vim	/^function! UnimpairedMapTransform(algorithm, key) abort$/;"	f
g:loaded_unimpaired	plugin/unimpaired.vim	/^let g:loaded_unimpaired = 1$/;"	v
g:unimpaired_html_entities	plugin/unimpaired.vim	/^let g:unimpaired_html_entities = {$/;"	v
s:BlankDown	plugin/unimpaired.vim	/^function! s:BlankDown() abort$/;"	f
s:BlankUp	plugin/unimpaired.vim	/^function! s:BlankUp() abort$/;"	f
s:Context	plugin/unimpaired.vim	/^function! s:Context(reverse) abort$/;"	f
s:ContextMotion	plugin/unimpaired.vim	/^function! s:ContextMotion(reverse) abort$/;"	f
s:CursorOptions	plugin/unimpaired.vim	/^function! s:CursorOptions() abort$/;"	f
s:ExecMove	plugin/unimpaired.vim	/^function! s:ExecMove(cmd) abort$/;"	f
s:FileByOffset	plugin/unimpaired.vim	/^function! s:FileByOffset(num) abort$/;"	f
s:GetWindow	plugin/unimpaired.vim	/^function! s:GetWindow() abort$/;"	f
s:Map	plugin/unimpaired.vim	/^function! s:Map(...) abort$/;"	f
s:MapNextFamily	plugin/unimpaired.vim	/^function! s:MapNextFamily(map,cmd) abort$/;"	f
s:Move	plugin/unimpaired.vim	/^function! s:Move(cmd, count, map) abort$/;"	f
s:MoveSelectionDown	plugin/unimpaired.vim	/^function! s:MoveSelectionDown(count) abort$/;"	f
s:MoveSelectionUp	plugin/unimpaired.vim	/^function! s:MoveSelectionUp(count) abort$/;"	f
s:NextFileEntry	plugin/unimpaired.vim	/^function! s:NextFileEntry(count) abort$/;"	f
s:PreviousFileEntry	plugin/unimpaired.vim	/^function! s:PreviousFileEntry(count) abort$/;"	f
s:SetupPaste	plugin/unimpaired.vim	/^function! s:SetupPaste() abort$/;"	f
s:StatuslineRefresh	plugin/unimpaired.vim	/^function! s:StatuslineRefresh() abort$/;"	f
s:Toggle	plugin/unimpaired.vim	/^function! s:Toggle(op) abort$/;"	f
s:Transform	plugin/unimpaired.vim	/^function! s:Transform(algorithm,type) abort$/;"	f
s:TransformOpfunc	plugin/unimpaired.vim	/^function! s:TransformOpfunc(type) abort$/;"	f
s:TransformSetup	plugin/unimpaired.vim	/^function! s:TransformSetup(algorithm) abort$/;"	f
s:entries	plugin/unimpaired.vim	/^function! s:entries(path) abort$/;"	f
s:fnameescape	plugin/unimpaired.vim	/^function! s:fnameescape(file) abort$/;"	f
s:option_map	plugin/unimpaired.vim	/^function! s:option_map(letter, option, mode) abort$/;"	f
s:putline	plugin/unimpaired.vim	/^function! s:putline(how, map) abort$/;"	f
s:string_decode	plugin/unimpaired.vim	/^function! s:string_decode(str) abort$/;"	f
s:string_encode	plugin/unimpaired.vim	/^function! s:string_encode(str) abort$/;"	f
s:url_decode	plugin/unimpaired.vim	/^function! s:url_decode(str) abort$/;"	f
s:url_encode	plugin/unimpaired.vim	/^function! s:url_encode(str) abort$/;"	f
s:xml_decode	plugin/unimpaired.vim	/^function! s:xml_decode(str) abort$/;"	f
s:xml_encode	plugin/unimpaired.vim	/^function! s:xml_encode(str) abort$/;"	f
s:xml_entity_decode	plugin/unimpaired.vim	/^function! s:xml_entity_decode(str) abort$/;"	f
unimpaired.vim	README.markdown	/^# unimpaired.vim$/;"	c
unimpaired_paste	plugin/unimpaired.vim	/^  augroup unimpaired_paste$/;"	a
